# Copyright 2022-2024, axodotdev
# SPDX-License-Identifier: MIT or Apache-2.0
#
# CI that:
#
# * checks for a Git Tag that looks like a release
# * builds artifacts with cargo-dist (archives, installers, hashes)
# * uploads those artifacts to temporary workflow zip
# * on success, uploads the artifacts to a GitHub Release
#
# Note that the GitHub Release will be created with a generated
# title/body based on your changelogs.

# Modernized GitHub Actions workflow for multi-platform Rust builds
# Builds and uploads binaries for Linux, Windows, and macOS

name: Release

on:
  push:
    tags:
      - '**[0-9]+.[0-9]+.[0-9]+*'

permissions:
  contents: write

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-pc-windows-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: armv7-unknown-linux-gnueabihf  # Raspberry Pi (32-bit)
            os: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain (macOS only)
        if: runner.os == 'macOS'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: Build (Linux/Windows with cross-action)
        if: runner.os != 'macOS'
        uses: taiki-e/cross-action@v0
        with:
          target: ${{ matrix.target }}
          args: --release
      - name: Build (macOS)
        if: runner.os == 'macOS'
        run: cargo build --release --target ${{ matrix.target }}
      - name: Prepare artifact
        run: |
          mkdir -p dist
          if [[ "${{ matrix.target }}" == *windows* ]]; then
            cp target/${{ matrix.target }}/release/adhanapp.exe dist/adhanapp-${{ matrix.target }}.exe
          else
            cp target/${{ matrix.target }}/release/adhanapp dist/adhanapp-${{ matrix.target }}
          fi
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: adhanapp-${{ matrix.target }}
          path: dist/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
